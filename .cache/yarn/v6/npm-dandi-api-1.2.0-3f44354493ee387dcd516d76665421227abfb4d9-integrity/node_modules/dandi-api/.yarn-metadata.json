{
  "manifest": {
    "name": "dandi-api",
    "version": "1.2.0",
    "description": "> npm install dandi-api > > npm uninstall dandi-api >",
    "main": "main.js",
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "dependencies": {
      "axios": "^0.21.1",
      "cheerio": "^1.0.0-rc.10",
      "cookie": "^0.5.0",
      "dandi-api": "^1.1.0",
      "fetch": "^1.1.0",
      "file-type": "^17.1.1",
      "form-data": "^4.0.0",
      "insta-fetcher": "^1.3.17",
      "jsdom": "^19.0.0",
      "jsdon": "^0.1.15",
      "node-fetch": "^2.6.1",
      "qs": "^6.10.3",
      "request": "^2.88.2",
      "url": "^0.11.0",
      "yt-search": "^2.10.3"
    },
    "keywords": [
      "dandi-api"
    ],
    "repository": {
      "type": "git",
      "url": "git+https://github.com/dandyproject/dandie-api.git"
    },
    "author": {
      "name": "@dandisubhani_"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-dandi-api-1.2.0-3f44354493ee387dcd516d76665421227abfb4d9-integrity/node_modules/dandi-api/package.json",
    "readmeFilename": "README.md",
    "readme": "## Penginstalan\n> npm install dandi-api\n>\n> npm uninstall dandi-api\n>\n\n## ```Function```\n```js\nconst ds = require('dandi-api')\nds : {\n  Yta: [AsyncFunction: anonymous],\n  Ytv: [AsyncFunction: anonymous],\n  Tiktok: [AsyncFunction: downloader],\n  Instagram: [AsyncFunction: downloader],\n  Facebook: [Function (anonymous)],\n  Twitter: [AsyncFunction: downloader],\n  SoundCloud: [AsyncFunction: downloader],\n  Imgur: [AsyncFunction: downloader],\n  Imdb: [AsyncFunction: downloader],\n  Anime: [Function: anime],\n  Manga: [Function: manga],\n  Character: [Function: character],\n  JadwalBola: [Function: jadwalbola],\n  JadwalTv: [Function: jadwaltv],\n  JadwalSholat: [Function: jadwalsholat],\n  Pinterest: [Function: pinterest],\n  Film: [Function: film],\n  Wattpad: [Function: wattpad],\n  WattpadUser: [Function: wattpaduser],\n  Webtoons: [Function: webtoons],\n  Mangatoons: [Function: mangatoons],\n  Drakor: [Function: drakor],\n  Telesticker: [AsyncFunction (anonymous)],\n  StickerSearch: [Function: stickersearch],\n  ListSurah: [Function: listsurah],\n  Surah: [Function: surah],\n  TafsirSurah: [Function: tafsirsurah],\n  KompasNews: [Function: kompasnews],\n  Covid: [AsyncFunction: covid],\n  Shoope: [AsyncFunction: Shoope],\n  Gempa: [AsyncFunction: Gempa],\n  GSMArena: [AsyncFunction: GSMArena],\n  Emoji: [AsyncFunction: Emoji],\n  Wikipedia: [AsyncFunction: Wikipedia],\n  RandomCerpen: [AsyncFunction: RandomCerpen],\n  Mediafire: [AsyncFunction (anonymous)],\n  Mangatoon: [AsyncFunction (anonymous)],\n  IgStalk: [AsyncFunction (anonymous)],\n  SfileDown: [AsyncFunction (anonymous)],\n  SfileSearch: [Function (anonymous)],\n  ResepSearch: [AsyncFunction (anonymous)],\n  ResepRead: [AsyncFunction (anonymous)],\n  SearchGore: [AsyncFunction (anonymous)],\n  Goredl: [AsyncFunction (anonymous)],\n  RandomGore: [AsyncFunction (anonymous)],\n  GrupWA: [Function (anonymous)],\n  ArtiNama: [Function (anonymous)],\n  WallpaperHd: [Function (anonymous)],\n  Kbbi: [AsyncFunction (anonymous)]\n}\n```\n\n## ```Downloader```\n```js\nconst ds = require('dandi-api');\n\nconst url_youtube = 'https://www.youtube.com/watch?v=x9SzUoJei-U'\nconst url_tiktok = 'https://vt.tiktok.com/ZSehyjVW9/'\nconst url_instagram = 'https://www.instagram.com/p/CDNj_q-FO9M/'\nconst url_facebook = 'http://www.facebook.com/groups/526909968570398/permalink/571916620736399/'\nconst url_twitter = 'https://twitter.com/LucuLucuVideo/status/1454834787382816775?s=20'\nconst url_soundcloud = 'https://soundcloud.com/enggak-tau-829795349/tri-suaka-aku-bukan-jodohnya?utm_campaign=social_sharing&utm_source=mobi&utm_terms=social_sharing_on_mobi.control%2Ctop_curators.top_curators'\nconst url_imgur = 'https://imgur.com/gallery/rK8ppvC'\nconst url_imdb = 'https://www.imdb.com/video/vi146981657?listId=ls053181649'\nconst url_telesticker = 'https://t.me/addstickers/punyaJvadrsaprn'\n\n// youtube\nds.Yta(url_youtube)\n    .then(data => {console.log(data)\n});\n\nds.Yta(url_youtube)\n    .then(data => {console.log(data)\n});\n\n// tiktok\nds.Tiktok(url_tiktok)\n    .then(data => {console.log(data)\n});\n\n// instagram\nds.Instagram(url_instagram)\n    .then(data => {console.log(data)\n});\n\n// facebook\nds.Facebook(url_facebook)\n    .then(data => {console.log(data)\n});\n\n// twitter\nds.Twitter(url_twitter)\n    .then(data => {console.log(data)\n});\n\n// soundcloud\nds.SoundCloud(url_soundcloud)\n    .then(data => {console.log(data)\n});\n\n// imgur\nds.Imgur(url_imgur)\n    .then(data => {console.log(data)\n});\n\n// imdb\nds.Imdb(url_imdb)\n    .then(data => {console.log(data)\n});\n\n// telesticker\nds.Telesticker(url_telesticker)\n    .then(data => {console.log(data)\n});\n```\n\n## ```Anime```\n```js\nconst ds = require('dandi-api');\n\nconst query = 'naruto'\n\n// anime\nds.Anime(query)\n    .then(data => {console.log(data)\n});\n\n// manga\nds.Manga(query)\n    .then(data => {console.log(data)\n});\n\n// character\nds.Character(query)\n    .then(data => {console.log(data)\n});\n```\n\n## ```Search```\n```js\nconst ds = require('dandi-api');\n\nconst query_pinterest = 'yuri'\nconst query_film = 'love story'\nconst query_wattpad = 'love story'\nconst query_webtoons = 'love story'\nconst query_mangatoons = 'love story'\nconst query_drakor = 'love story'\nconst query_stickersearch = 'patrick'\nconst query_resep = 'bakwan'\nconst resep_link = 'https://resepkoki.id/resep/resep-bakwan-mie/'\n\n// pinterest\nds.Pinterest(query_pinterest)\n    .then(data => {console.log(data)\n});\n\n// film\nds.Film(query_film)\n    .then(data => {console.log(data)\n});\n\n// wattpad\nds.Wattpad(query_wattpad)\n    .then(data => {console.log(data)\n});\n\n// webtoons\nds.Webtoons(query_webtoons)\n    .then(data => {console.log(data)\n});\n\n// mangatoons\nds.Mangatoons(query_mangatoons)\n    .then(data => {console.log(data)\n});\n\n// drakor\nds.Drakor(query_drakor)\n    .then(data => {console.log(data)\n});\n\n// stickersearch\nds.StickerSearch(query_stickersearch)\n    .then(data => {console.log(data)\n});\n\n// resepsearch\nds.ResepSearch(query_resep)\n    .then(data => {console.log(data)\n});\n\n\n// resepread\nds.ResepRead(resep_link)\n    .then(data => {console.log(data)\n});\n```\n\n## ```Islami```\n```js\nconst ds = require('dandi-api');\n\nconst query = 'udin'\n\n// listsurah\nds.ListSurah()\n    .then(data => {console.log(data)\n});\n\n// surah\nds.Surah(query)\n    .then(data => {console.log(data)\n});\n\n// tafsirsurah\nds.TafsirSurah(query)\n    .then(data => {console.log(data)\n});\n```\n\n## ```Information && News```\n```js\nconst ds = require('dandi-api');\n\nconst username = 'WattpadRomanceIN'\nconst user_ig = 'dandisubhani_'\n\n// jadwalbola\nds.JadwalBola()\n    .then(data => {console.log(data)\n});\n\n// jadwaltv\nds.JadwalTv()\n    .then(data => {console.log(data)\n});\n\n// jadwalsholat\nds.JadwalSholat()\n    .then(data => {console.log(data)\n});\n\n// kompasnews\nds.KompasNews()\n    .then(data => {console.log(data)\n});\n\n// inews\nds.Inews()\n    .then(data => {console.log(data)\n});\n\n// wattpaduser\nds.WattpadUser(username)\n     .then(data => {console.log(data)\n});\n\n\n// igstalk\nds.IgStalk(user_ig)\n    .then(data => {console.log(data)\n});\n```\n",
    "licenseText": "MIT License\n\nCopyright (c) 2021 fabil\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dandi-api/-/dandi-api-1.2.0.tgz#3f44354493ee387dcd516d76665421227abfb4d9",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dandi-api/-/dandi-api-1.2.0.tgz",
    "hash": "3f44354493ee387dcd516d76665421227abfb4d9",
    "integrity": "sha512-/hJ741jix1zwiJI4lVEvj9ws51Ak0ZtNBnUnR/Q+S2tXMnpQKxXMWrAMYsfZWMHwF9ml/NkJSHIBa6VIrGKwcw==",
    "registry": "npm",
    "packageName": "dandi-api",
    "cacheIntegrity": "sha512-/hJ741jix1zwiJI4lVEvj9ws51Ak0ZtNBnUnR/Q+S2tXMnpQKxXMWrAMYsfZWMHwF9ml/NkJSHIBa6VIrGKwcw== sha1-P0Q1RJPuOH3NUW12ZlQhInq/tNk="
  },
  "registry": "npm",
  "hash": "3f44354493ee387dcd516d76665421227abfb4d9"
}