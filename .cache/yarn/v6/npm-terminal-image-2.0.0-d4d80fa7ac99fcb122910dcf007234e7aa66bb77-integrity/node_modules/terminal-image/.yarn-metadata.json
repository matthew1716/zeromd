{
  "manifest": {
    "name": "terminal-image",
    "version": "2.0.0",
    "description": "Display images in the terminal",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/terminal-image.git"
    },
    "funding": "https://github.com/sponsors/sindresorhus",
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "https://sindresorhus.com"
    },
    "type": "module",
    "exports": "./index.js",
    "engines": {
      "node": ">=12"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "terminal",
      "image",
      "term",
      "iterm",
      "shell",
      "console",
      "command-line",
      "img",
      "pic",
      "picture",
      "photo",
      "ansi",
      "escape",
      "jpg",
      "jpeg",
      "display",
      "show",
      "pixels",
      "gif",
      "animation",
      "sequence"
    ],
    "dependencies": {
      "chalk": "^4.1.1",
      "jimp": "^0.16.1",
      "log-update": "^4.0.0",
      "render-gif": "^2.0.4",
      "term-img": "^6.0.0"
    },
    "devDependencies": {
      "@types/node": "^15.0.1",
      "ava": "^3.15.0",
      "tsd": "^0.14.0",
      "xo": "^0.39.1"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-terminal-image-2.0.0-d4d80fa7ac99fcb122910dcf007234e7aa66bb77-integrity/node_modules/terminal-image/package.json",
    "readmeFilename": "readme.md",
    "readme": "# terminal-image\n\n> Display images in the terminal\n\nWorks in any terminal that supports colors.\n\n<img src=\"screenshot.png\" width=\"1082\">\n\n*In iTerm, the image will be [displayed in full resolution](screenshot-iterm.jpg), since iTerm has [special image support](https://www.iterm2.com/documentation-images.html).*\n\n## Install\n\n```\n$ npm install terminal-image\n```\n\n## Usage\n\n```js\nimport terminalImage from 'terminal-image';\n\nconsole.log(await terminalImage.file('unicorn.jpg'));\n```\n\nOptionally, you can specify the `height` and/or `width` to scale the image. That can be either the percentage of the terminal window or number of rows and/or columns. Please note that the image will always be scaled to fit the size of the terminal. If width and height are not defined, by default the image will take the width and height of the terminal.\n\nIt is recommended to use the percentage option.\n\n```js\nimport terminalImage from 'terminal-image';\n\nconsole.log(await terminalImage.file('unicorn.jpg', {width: '50%', height: '50%'}));\n```\n\nYou can set width and/or height as columns and/or rows of the terminal window as well.\n\n```js\nimport terminalImage from 'terminal-image';\n\nconsole.log(await terminalImage.file('unicorn.jpg', {width: 50}));\n```\n\nBy default, aspect ratio is always maintained. If you don't want to maintain aspect ratio, set `preserveAspectRatio` to false. However, your image will be scaled to fit the size of the terminal.\n\n```js\nimport terminalImage from 'terminal-image';\n\nconsole.log(await terminalImage.file('unicorn.jpg', {width: 70, height: 50, preserveAspectRatio: false}));\n```\n\n## API\n\nSupports PNG and JPEG images. Animated GIFs are also supported with `.gifBuffer` and `.gifFile`.\n\n### terminalImage.buffer(imageBuffer, options?)\n### terminalImage.file(filePath, options?)\n\nReturns a `Promise<string>` with the ANSI escape codes to display the image.\n\n### terminalImage.gifBuffer(imageBuffer, options?)\n### terminalImage.gifFile(filePath, options?)\n\nReturns a function that can be called to stop the GIF animation.\n\n#### options\n\nType: `object`\n\n##### height\n\nType: `string | number`\n\nCustom image height.\n\nCan be set as percentage or number of rows of the terminal. It is recommended to use the percentage options.\n\n##### width\n\nType: `string | number`\n\nCustom image width.\n\nCan be set as percentage or number of columns of the terminal. It is recommended to use the percentage options.\n\n##### preserveAspectRatio\n\nType: `boolean`\\\nDefault: `true`\n\nWhether to maintain image aspect ratio or not.\n\n##### maximumFrameRate\n\n**Only works for `terminalImage.gifBuffer` or `terminalImage.gifFile`**\n\nType: `number`\\\nDefault: `30`\n\nMaximum framerate to render the GIF. This option is ignored when using iTerm.\n\n##### renderFrame\n\n**Only works for `terminalImage.gifBuffer` or `terminalImage.gifFile`**\n\nType: `(text: string) => void`\\\nDefault: [log-update](https://github.com/sindresorhus/log-update)\n\nCustom handler which is run for each frame of the GIF.\n\nThis can be set to change how each frame is shown.\n\n##### renderFrame.done\n\n**Only works for `terminalImage.gifBuffer` or `terminalImage.gifFile`**\n\nType: `() => void`\\\nDefault: [log-update](https://github.com/sindresorhus/log-update)\n\nCustom handler which is run when the animation playback is stopped.\n\nThis can be set to perform a cleanup when playback has finished.\n\n## Tip\n\n### Display a remote image\n\n```js\nimport terminalImage from 'terminal-image';\nimport got from 'got';\n\nconst body = await got('https://sindresorhus.com/unicorn').buffer();\nconsole.log(await terminalImage.buffer(body));\n```\n\n## Related\n\n- [terminal-image-cli](https://github.com/sindresorhus/terminal-image-cli) - CLI for this module\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n- [chalk](https://github.com/chalk/chalk) - Style and color text in the terminal\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (https://sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/terminal-image/-/terminal-image-2.0.0.tgz#d4d80fa7ac99fcb122910dcf007234e7aa66bb77",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/terminal-image/-/terminal-image-2.0.0.tgz",
    "hash": "d4d80fa7ac99fcb122910dcf007234e7aa66bb77",
    "integrity": "sha512-25HcdYC79g0rPxk9o7RIp3i0/ebP+viR6vj2Fsxh1a9pE6o7PfXz4HlmdYLGsQsmBeQNK88BA2UJo4IzBRfzaA==",
    "registry": "npm",
    "packageName": "terminal-image",
    "cacheIntegrity": "sha512-25HcdYC79g0rPxk9o7RIp3i0/ebP+viR6vj2Fsxh1a9pE6o7PfXz4HlmdYLGsQsmBeQNK88BA2UJo4IzBRfzaA== sha1-1NgPp6yZ/LEikQ3PAHI056pmu3c="
  },
  "registry": "npm",
  "hash": "d4d80fa7ac99fcb122910dcf007234e7aa66bb77"
}