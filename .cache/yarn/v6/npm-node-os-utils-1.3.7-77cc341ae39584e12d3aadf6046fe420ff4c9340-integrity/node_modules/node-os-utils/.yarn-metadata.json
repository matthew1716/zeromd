{
  "manifest": {
    "name": "node-os-utils",
    "version": "1.3.7",
    "description": "An operating system utility library.",
    "main": "index.js",
    "scripts": {
      "test": "node_modules/.bin/mocha test/test.js"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/SunilWang/node-os-utils.git"
    },
    "author": {
      "name": "SunilWang",
      "email": "ahwangshu@qq.com"
    },
    "keywords": [
      "os",
      "operating system",
      "server",
      "netstat",
      "memory",
      "cpu",
      "monitor",
      "stats",
      "processes",
      "openfiles",
      "harddrive"
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/SunilWang/node-os-utils/issues"
    },
    "homepage": "https://github.com/SunilWang/node-os-utils#readme",
    "devDependencies": {
      "mocha": "^6.2.3"
    },
    "dependencies": {},
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-node-os-utils-1.3.7-77cc341ae39584e12d3aadf6046fe420ff4c9340-integrity/node_modules/node-os-utils/package.json",
    "readmeFilename": "README.md",
    "readme": "## Description\n\nmonitor vital signs of your server :\n\n- CPU average usage\n- Free and used drive space\n- Free and used memory space\n- Operating System\n- All processes running\n- TTY/SSH opened\n- Total opened files\n- Network speed (input and output)\n\n# node-os-utils\n\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n[![Build Status](https://api.travis-ci.org/SunilWang/node-os-utils.svg?branch=master)](https://travis-ci.org/SunilWang/node-os-utils)\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n\nAn operating system utility library. Some methods are wrappers of node libraries and others are calculations made by the module.\n\n[os-utils](https://github.com/oscmejia/os-utils) extended\n\n## Installation\n\nOne line installation with [npm](http://npmjs.org).\n\n```bash\n$ npm install node-os-utils --save\n```\nThen in your code\n\n## Example\n\n```js\nvar osu = require('node-os-utils')\nvar cpu = osu.cpu\n\nvar count = cpu.count() // 8\n\ncpu.usage()\n  .then(cpuPercentage => {\n    console.log(cpuPercentage) // 10.38\n  })\n\nvar osCmd = osu.osCmd\n\nosCmd.whoami()\n  .then(userName => {\n    console.log(userName) // admin\n  })\n```\n\n## Configuration\n\nrequire('node-os-utils').options\n\nDefault settings:\n\n- `NOT_SUPPORTED_VALUE` is `not supported`. os not supported, return value.\n- `INTERVAL` is `1000` millisecond. Represents the refresh of the cpu and network workers.\n\n:warning: If this module uses too much CPU, set the `INTERVAL` value to 10000 or more.\n\n## Info\n\nIf you have `not supported` in some categories, your OS configuration is not supported for this option.\n\nYou can use `require('node-os-utils').isNotSupported()` to decide `not supported`.\n\n```js\nvar osu = require('node-os-utils')\nvar osCmd = osu.osCmd\n\nosCmd\n  .topCpu()\n  .then(function(res){\n    if(osu.isNotSupported(res)){\n      // Handle 'not supported'\n    }else{\n      // Things to do...\n    }\n  })\n````\n## Usage\nThe following methods are available:\n\n### require('node-os-utils').cpu\n\n#### cpu.average():object\n\nCPU average\n\n```js\nvar osu = require('node-os-utils')\nvar cpu = osu.cpu\n\nvar info = cpu.average()\n\nconsole.log(info)\n```\n```\n{ totalIdle: 33526410,\n  totalTick: 37460330,\n  avgIdle: 4190801.25,\n  avgTotal: 4682541.25 }\n```\n\n#### cpu.usage(interval):Promise(number)\n\nCPU average usage\n\n- [interval]: number - interval millisecond. defaulta: 1000\n\n```js\nvar osu = require('node-os-utils')\nvar cpu = osu.cpu\n\ncpu.usage()\n  .then(info => {\n    console.log(info)\n  })\n```\n```\n10.06\n```\n\n#### cpu.free(interval):Promise(number)\n\ncpu free percentage\n\n- [interval]: number - interval millisecond. defaulta: 1000\n\n```js\nvar osu = require('node-os-utils')\nvar cpu = osu.cpu\n\ncpu.free()\n  .then(info => {\n    console.log(info)\n  })\n```\n```\n89.26\n```\n#### cpu.count():number\n#### cpu.model():string\n#### cpu.loadavg():Array[number]\n#### cpu.loadavgTime(time):number\n\n- time: number - 1, 5 or 15 minutes, defaulta: 1\n\n---\n\n### require('node-os-utils').drive\n\n#### drive.info():Promise(Object)\n\ndrive info\n\n```js\nvar osu = require('node-os-utils')\nvar drive = osu.drive\n\ndrive.info()\n  .then(info => {\n    console.log(info)\n  })\n\n```\n```\n{ totalGb: '464.8',\n  usedGb: '147.7',\n  freeGb: '316.9',\n  usedPercentage: '31.8',\n  freePercentage: '68.2' }\n```\n\n#### drive.free():Promise(Object)\n```\n{ totalGb: '464.8', freeGb: '316.9', freePercentage: '68.2' }\n```\n#### drive.used():Promise(Object)\n```\n{ totalGb: '464.8', usedGb: '316.9', usedPercentage: '68.2' }\n```\n\n---\n\n### require('node-os-utils').mem\n\n#### mem.info():Promise(Object)\n\nmemory info\n\n```js\nvar osu = require('node-os-utils')\nvar mem = osu.mem\n\nmem.info()\n  .then(info => {\n    console.log(info)\n  })\n\n```\n```\n{ totalMemMb: 16384,\n  usedMemMb: 13403.41,\n  freeMemMb: 2980.59,\n  freeMemPercentage: 18.19 }\n```\n#### mem.free():Promise(Object)\n```\n{ totalMemMb: 16384, freeMemMb: 3033.63 }\n```\n#### mem.used():Promise(Object)\n```\n{ totalMemMb: 16384, usedMemMb: 13421.15 }\n```\n#### mem.totalMem():number\n```\n17179869184\n```\n\n---\n\n### require('node-os-utils').netstat\n\n#### netstat.stats():Promise(Array[Object])\n```js\nvar osu = require('node-os-utils')\nvar netstat = osu.netstat\n\nnetstat.stats()\n  .then(info => {\n    console.log(info)\n  })\n\n```\n```\n[ { interface: 'lo',\n    inputBytes: '731508412',\n    outputBytes: '731508412' },\n  { interface: 'eth0',\n    inputBytes: '1356471479',\n    outputBytes: '26631036763' } ]\n```\n\n#### netstat.inOut(interval):Promise(Object)\n\n- [interval]: number - interval millisecond. defaulta: 1000\n\n```js\nvar osu = require('node-os-utils')\nvar netstat = osu.netstat\n\nnetstat.inOut()\n  .then(info => {\n    console.log(info)\n  })\n\n```\n```\n{ total: { inputMb: 0.02, outputMb: 1.22 },\n  eth0: { inputMb: 0.02, outputMb: 1.22 } }\n```\n\n---\n\n### require('node-os-utils').openfiles\n\n#### openfiles.openFd():Promise(number)\nTotal opened files\n\n```\n1088\n```\n\n---\n\n### require('node-os-utils').os\n\n#### os.oos():Promise(string)\n\noriginal operating system\n\n```\nMac OS X 10.12.5\n```\n```\nRed Hat 7.3\n```\n\n#### os.platform():string\n#### os.uptime():number - (seconds)\n#### os.ip():string\n#### os.hostname():string\n#### os.type():string\n#### os.arch():string\n\n---\n\n### require('node-os-utils').proc\n\n#### proc.totalProcesses():Promise(number)\n#### proc.zombieProcesses():Promise(number)\n\n---\n\n### require('node-os-utils').users\n\n#### users.openedCount():Promise(number)\nTTY/SSH opened\n\n---\n\n### require('node-os-utils').osCmd\n\n#### osCmd.topCpu():Promise(string)\n#### osCmd.topMem():Promise(string)\n#### osCmd.vmstats():Promise(string)\n......\n\n```js\nvar bucket = require('./bucket')\nvar exec = require('./exec')\nvar wrapExec = exec.wrapExec\n\nbucket.osCmd = {\n  topCpu: wrapExec('ps -eo pcpu,user,args --no-headers | sort -k 1 -n | tail -n 10 | sort -k 1 -nr | cut -c 1-70'),\n  topMem: wrapExec('ps -eo pmem,pid,cmd | sort -k 1 -n | tail -n 10 | sort -k 1 -nr | cut -c 1-70'),\n  vmstats: wrapExec('vmstat -S m'),\n  processesUsers: wrapExec('ps hax -o user | sort | uniq -c'),\n  diskUsage: wrapExec('df -h'),\n  who: wrapExec('who'),\n  whoami: wrapExec('whoami'),\n  openPorts: wrapExec('lsof -Pni4 | grep ESTABLISHED'),\n  ifconfig: wrapExec('ifconfig')\n}\n```\n\n\n## License\n\n[MIT](LICENSE). Copyright (c).\n\n[npm-image]: https://img.shields.io/npm/v/node-os-utils.svg\n[npm-url]: https://www.npmjs.com/package/node-os-utils\n[downloads-image]: https://img.shields.io/npm/dt/node-os-utils.svg\n[downloads-url]: https://npmjs.org/package/node-os-utils\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Sunil Wang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/node-os-utils/-/node-os-utils-1.3.7.tgz#77cc341ae39584e12d3aadf6046fe420ff4c9340",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/node-os-utils/-/node-os-utils-1.3.7.tgz",
    "hash": "77cc341ae39584e12d3aadf6046fe420ff4c9340",
    "integrity": "sha512-fvnX9tZbR7WfCG5BAy3yO/nCLyjVWD6MghEq0z5FDfN+ZXpLWNITBdbifxQkQ25ebr16G0N7eRWJisOcMEHG3Q==",
    "registry": "npm",
    "packageName": "node-os-utils",
    "cacheIntegrity": "sha512-fvnX9tZbR7WfCG5BAy3yO/nCLyjVWD6MghEq0z5FDfN+ZXpLWNITBdbifxQkQ25ebr16G0N7eRWJisOcMEHG3Q== sha1-d8w0GuOVhOEtOq32BG/kIP9Mk0A="
  },
  "registry": "npm",
  "hash": "77cc341ae39584e12d3aadf6046fe420ff4c9340"
}