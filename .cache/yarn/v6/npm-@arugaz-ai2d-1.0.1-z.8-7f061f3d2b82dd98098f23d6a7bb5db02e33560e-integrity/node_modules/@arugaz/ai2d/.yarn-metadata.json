{
  "manifest": {
    "name": "@arugaz/ai2d",
    "version": "1.0.1-z.8",
    "description": "Generate a hyper-realistic photo an anime style!",
    "type": "module",
    "source": "src/index.ts",
    "exports": {
      "require": "./dist/index.cjs",
      "default": "./dist/index.modern.mjs"
    },
    "main": "./dist/index.cjs",
    "module": "./dist/index.module.mjs",
    "types": "./dist/index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://gitlab.com/arugaz/ai2d.git"
    },
    "keywords": [
      "ai",
      "ai2d",
      "photo",
      "anime",
      "photo to anime"
    ],
    "author": {
      "name": "arugaz",
      "email": "arugaastri@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/arugaz"
    },
    "homepage": "https://github.com/arugaz",
    "files": [
      "dist"
    ],
    "dependencies": {
      "async-retry": "^1.3.3",
      "axios": "^0.24.0",
      "https-proxy-agent": "^5.0.1",
      "socks-proxy-agent": "^7.0.0"
    },
    "peerDependencies": {
      "jimp": "^0.16.1",
      "sharp": "^0.30.5"
    },
    "peerDependenciesMeta": {
      "jimp": {
        "optional": true
      },
      "sharp": {
        "optional": true
      }
    },
    "devDependencies": {
      "@types/async-retry": "^1.4.5",
      "@types/node": "^18.11.15",
      "@types/sharp": "^0.31.0",
      "jimp": "^0.16.1",
      "sharp": "^0.30.5"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-@arugaz-ai2d-1.0.1-z.8-7f061f3d2b82dd98098f23d6a7bb5db02e33560e-integrity/node_modules/@arugaz/ai2d/package.json",
    "readmeFilename": "README.md",
    "readme": "<div align=\"center\">\n  <a href=\"https://github.com/arugaz\"><img width=\"90%\" src=\"https://raw.githubusercontent.com/arugaz/ArugaZ/d813ebf4caf9f2855451b81fa6f539254210e64d/assets/ai2d.svg\" /></a>\n</div>\n<div align=\"center\">\n\n[![npm version](https://img.shields.io/npm/v/@arugaz/ai2d.svg?style=flat-square)](https://npmjs.org/package/@arugaz/ai2d)\n[![install size](https://img.shields.io/badge/dynamic/json?url=https://packagephobia.com/v2/api.json?p=@arugaz/ai2d&query=$.install.pretty&label=install%20size&style=flat-square)](https://packagephobia.now.sh/result?p=@arugaz/ai2d)\n[![npm downloads](https://img.shields.io/npm/dm/@arugaz/ai2d.svg?style=flat-square)](https://npm-stat.com/charts.html?package=@arugaz/ai2d)\n\n</div>\n<div align=\"center\">\nGenerate a hyper-realistic photo an anime style!\n</div>\n\n## Table of Contents\n\n- [Features](#features)\n- [Installing](#install)\n- [Usage](#usage)\n- [License](#license)\n\n## Features\n\n- Generate a hyper-realistic photo an anime style\n\n## Install\n\n```\n$ npm install --save @arugaz/ai2d\n$ yarn add @arugaz/ai2d\n```\n\n> **Before use this package, You have to add [sharp](https://www.npmjs.com/package/sharp) or [jimp](https://www.npmjs.com/package/jimp) to dependencies.**\n\n## Usage\n\n```js\nimport AI2D from \"@arugaz/ai2d\";\n\nawait AI2D(`Buffer | Base64 | Url | Path`, options);\n\n// default\nawait AI2D(\"https://nekopoi.care/image.png\"); //=> Buffer\n\n// crop\nawait AI2D(\"https://nekopoi.care/image.png\", {\n  crop: \"SINGLE\", // SINGLE | COMPARED\n}); //=> Buffer\n\n// proxy\nawait AI2D(\"https://nekopoi.care/image.png\", {\n  proxy: {\n    url: \"http://101.32.184.53:3128\",\n    chinese: true,\n    image: false,\n  }, // support http & socks\n}); //=> Buffer\n\n// with async-retry opts\nawait AI2D(\"https://nekopoi.care/image.png\", {\n  crop: \"COMPARED\",\n  retries: 100,\n  factor: 3,\n  randomize: false,\n}); //=> Buffer\n```\n\n### Options\n\nThe `options` are\n\n- `crop`: COMPARED | SINGLE. Default didnt crop the image.\n- `proxy`: Support http?s or socks proxy\n  - `url`: Your proxy url.\n  - `chinese`: Boolean, is your proxy from chinese?\n  - `image`: Boolean, download the image with proxy?\n- `retries`: The maximum amount of times to retry the operation. Default is `10`.\n- `factor`: The exponential factor to use. Default is `1`.\n- `minTimeout`: The number of milliseconds before starting the first retry. Default is `1000`.\n- `maxTimeout`: The maximum number of milliseconds between two retries. Default is `Infinity`.\n- `randomize`: Randomizes the timeouts by multiplying with a factor between `1` to `2`. Default is `true`.\n- `onRetry`: an optional `Function` that is invoked after a new retry is performed. It's passed the `Error` that triggered it as a parameter.\n- `forever`: Whether to retry forever.\n- `unref`: Whether to [unref](https://nodejs.org/api/timers.html#timers_unref) the setTimeout's.\n\n### Tldr\n\n> From `December 6` to `December 15` the AI had been available only in `China` or with `Chinese proxies`.\n> Since `December 16` the AI `works` for the rest of the world (UPD: still doesn't work in some countries) again so using proxies is not needed anymore, but it's limited and allows you to generate only one type of media.\n> Seems like `it's impossible` to find `FREE alive proxies`. Don't waste your time searching and `just buy it` somewhere.\n\n## License\n\n[MIT](https://gitlab.com/arugaz/ai2d/blob/main/LICENSE)\n",
    "licenseText": "MIT License\n\nCopyright (c) ArugaZ <arugaastri@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@arugaz/ai2d/-/ai2d-1.0.1-z.8.tgz#7f061f3d2b82dd98098f23d6a7bb5db02e33560e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@arugaz/ai2d/-/ai2d-1.0.1-z.8.tgz",
    "hash": "7f061f3d2b82dd98098f23d6a7bb5db02e33560e",
    "integrity": "sha512-1h6ay9kVSyWywAzrvlTsXutF46WiNhGDK2OcgFfTOFUnY/oM8SRuMcCFzsM+50SuNYt9lI8Qlo6rsrHq3TBRdQ==",
    "registry": "npm",
    "packageName": "@arugaz/ai2d",
    "cacheIntegrity": "sha512-1h6ay9kVSyWywAzrvlTsXutF46WiNhGDK2OcgFfTOFUnY/oM8SRuMcCFzsM+50SuNYt9lI8Qlo6rsrHq3TBRdQ== sha1-fwYfPSuC3ZgJjyPWp7tdsC4zVg4="
  },
  "registry": "npm",
  "hash": "7f061f3d2b82dd98098f23d6a7bb5db02e33560e"
}