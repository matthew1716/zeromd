{
  "manifest": {
    "name": "syntax-error",
    "version": "1.4.0",
    "description": "detect and report syntax errors in source code strings",
    "main": "index.js",
    "dependencies": {
      "acorn-node": "^1.2.0"
    },
    "devDependencies": {
      "tap": "^1.1.0"
    },
    "scripts": {
      "test": "tap test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/substack/node-syntax-error.git"
    },
    "homepage": "https://github.com/substack/node-syntax-error",
    "keywords": [
      "syntax",
      "error",
      "esprima",
      "stack",
      "line",
      "column"
    ],
    "author": {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    },
    "license": "MIT",
    "engine": {
      "node": ">=0.6"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-syntax-error-1.4.0-2d9d4ff5c064acb711594a3e3b95054ad51d907c-integrity/node_modules/syntax-error/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "# syntax-error\n\nDetect and report syntax errors in source code strings.\n\n[![build status](https://secure.travis-ci.org/substack/node-syntax-error.png)](http://travis-ci.org/substack/node-syntax-error)\n\nWhen you type `node src.js` you get a friendly error report about exactly where\nthe syntax error is. This module lets you check for syntax errors and report\nthem in a similarly friendly format that wrapping a try/catch around\n`Function()` or `vm.runInNewContext()` doesn't get you.\n\n# example\n\n``` js\nvar fs = require('fs');\nvar check = require('syntax-error');\n\nvar file = __dirname + '/src.js';\nvar src = fs.readFileSync(file);\n\nvar err = check(src, file);\nif (err) {\n    console.error('ERROR DETECTED' + Array(62).join('!'));\n    console.error(err);\n    console.error(Array(76).join('-'));\n}\n```\n\n---\n\n```\n$ node check.js\nERROR DETECTED!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n/home/substack/projects/node-syntax-error/example/src.js:5\n        if (Array.isArray(x) res.push.apply(res, x);\n                             ^\nParseError: Unexpected identifier\n---------------------------------------------------------------------------\n```\n\n# methods\n\n``` js\nvar check = require('syntax-error')\n```\n\n## var err = check(src, file, opts={})\n\nCheck the source code string `src` for syntax errors.\nOptionally you can specify a filename `file` that will show up in the output.\n\nIf `src` has a syntax error, return an error object `err` that can be printed or\nstringified.\n\nIf there are no syntax errors in `src`, return `undefined`.\n\nOptions will be passed through to [acorn-node](https://github.com/browserify/acorn-node).\nacorn-node defaults to options that match the most recent Node versions.\n\n## err.toString()\n\nReturn the long string description with a source snippet and a `^` under\npointing exactly where the error was detected.\n\n# attributes\n\n## err.message\n\nshort string description of the error type\n\n## err.line\n\nline number of the error in the original source (indexing starts at 1)\n\n## err.column\n\ncolumn number of the error in the original source (indexing starts at 1)\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install syntax-error\n```\n\n# license\n\nMIT\n",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/syntax-error/-/syntax-error-1.4.0.tgz#2d9d4ff5c064acb711594a3e3b95054ad51d907c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/syntax-error/-/syntax-error-1.4.0.tgz",
    "hash": "2d9d4ff5c064acb711594a3e3b95054ad51d907c",
    "integrity": "sha512-YPPlu67mdnHGTup2A8ff7BC2Pjq0e0Yp/IyTFN03zWO0RcK07uLcbi7C2KpGR2FvWbaB0+bfE27a+sBKebSo7w==",
    "registry": "npm",
    "packageName": "syntax-error",
    "cacheIntegrity": "sha512-YPPlu67mdnHGTup2A8ff7BC2Pjq0e0Yp/IyTFN03zWO0RcK07uLcbi7C2KpGR2FvWbaB0+bfE27a+sBKebSo7w== sha1-LZ1P9cBkrLcRWUo+O5UFStUdkHw="
  },
  "registry": "npm",
  "hash": "2d9d4ff5c064acb711594a3e3b95054ad51d907c"
}