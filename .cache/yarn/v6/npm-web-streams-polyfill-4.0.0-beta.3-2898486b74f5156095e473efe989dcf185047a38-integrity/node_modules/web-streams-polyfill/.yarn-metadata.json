{
  "manifest": {
    "name": "web-streams-polyfill",
    "version": "4.0.0-beta.3",
    "description": "Web Streams, based on the WHATWG spec reference implementation",
    "main": "dist/ponyfill.js",
    "module": "dist/ponyfill.mjs",
    "types": "types/ponyfill.d.ts",
    "exports": {
      ".": {
        "types": "./types/ponyfill.d.ts",
        "import": "./dist/ponyfill.mjs",
        "require": "./dist/ponyfill.js"
      },
      "./es5": {
        "types": "./types/ponyfill.d.ts",
        "import": "./dist/ponyfill.es5.mjs",
        "require": "./dist/ponyfill.es5.js"
      },
      "./polyfill": {
        "types": "./types/polyfill.d.ts",
        "default": "./dist/polyfill.js"
      },
      "./polyfill/es5": {
        "types": "./types/polyfill.d.ts",
        "default": "./dist/polyfill.es5.js"
      },
      "./dist/*": "./dist/*",
      "./types/*": "./types/*",
      "./package": "./package.json",
      "./package.json": "./package.json"
    },
    "scripts": {
      "test": "npm run test:types && npm run test:unit && npm run test:wpt && npm run test:bundler",
      "test:wpt": "npm run test:wpt:node && npm run test:wpt:chromium && npm run test:wpt:firefox",
      "test:wpt:node": "node --expose_gc ./test/wpt/node/run.js",
      "test:wpt:chromium": "node ./test/wpt/browser/run.js --browser chromium",
      "test:wpt:firefox": "node ./test/wpt/browser/run.js --browser firefox",
      "test:bundler": "npm run test:bundler:rollup && npm run test:bundler:webpack",
      "test:bundler:rollup": "cd test/rollup && npm ci && npm test",
      "test:bundler:webpack": "cd test/webpack && npm ci && npm test",
      "test:types": "tsc -p ./test/types/tsconfig.json",
      "test:unit": "node --experimental-import-meta-resolve ./node_modules/jasmine/bin/jasmine.js --config=test/unit/jasmine.json",
      "lint": "eslint \"src/**/*.ts\"",
      "build": "npm run build:bundle && npm run build:types",
      "build:bundle": "rollup -c",
      "build:types": "tsc --project . --emitDeclarationOnly --declarationDir ./lib && api-extractor run",
      "accept:types": "tsc --project . --emitDeclarationOnly --declarationDir ./lib && api-extractor run --local",
      "prepare": "npm run build"
    },
    "files": [
      "dist",
      "es5",
      "polyfill",
      "types"
    ],
    "engines": {
      "node": ">= 14"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/MattiasBuelens/web-streams-polyfill.git"
    },
    "keywords": [
      "streams",
      "whatwg",
      "polyfill"
    ],
    "author": {
      "name": "Mattias Buelens",
      "email": "mattias@buelens.com"
    },
    "contributors": [
      {
        "name": "Diwank Singh",
        "email": "diwank.singh@gmail.com"
      }
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/MattiasBuelens/web-streams-polyfill/issues"
    },
    "homepage": "https://github.com/MattiasBuelens/web-streams-polyfill#readme",
    "devDependencies": {
      "@microsoft/api-extractor": "^7.21.2",
      "@rollup/plugin-inject": "^4.0.4",
      "@rollup/plugin-replace": "^4.0.0",
      "@rollup/plugin-strip": "^2.1.0",
      "@rollup/plugin-typescript": "^8.3.1",
      "@types/jasmine": "^4.0.2",
      "@types/node": "^14.18.12",
      "@typescript-eslint/eslint-plugin": "^5.19.0",
      "@typescript-eslint/parser": "^5.19.0",
      "@ungap/promise-all-settled": "^1.1.2",
      "abort-controller": "^3.0.0",
      "eslint": "^8.13.0",
      "jasmine": "^4.0.2",
      "micromatch": "^4.0.5",
      "minimist": "^1.2.6",
      "playwright": "^1.20.2",
      "recursive-readdir": "^2.2.2",
      "rollup": "^2.70.1",
      "rollup-plugin-terser": "^7.0.2",
      "tslib": "^2.3.1",
      "typescript": "^4.7.0-beta",
      "wpt-runner": "^4.1.0"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-web-streams-polyfill-4.0.0-beta.3-2898486b74f5156095e473efe989dcf185047a38-integrity/node_modules/web-streams-polyfill/package.json",
    "readmeFilename": "README.md",
    "readme": "# web-streams-polyfill\n\nWeb Streams, based on the WHATWG spec reference implementation.  \n\n[![build status](https://api.travis-ci.com/MattiasBuelens/web-streams-polyfill.svg?branch=master)](https://travis-ci.com/MattiasBuelens/web-streams-polyfill)\n[![npm version](https://img.shields.io/npm/v/web-streams-polyfill.svg)](https://www.npmjs.com/package/web-streams-polyfill)\n[![license](https://img.shields.io/npm/l/web-streams-polyfill.svg)](https://github.com/MattiasBuelens/web-streams-polyfill/blob/master/LICENSE)\n[![Join the chat at https://gitter.im/web-streams-polyfill/Lobby](https://badges.gitter.im/web-streams-polyfill/Lobby.svg)](https://gitter.im/web-streams-polyfill/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## Links\n\n - [Official spec][spec]\n - [Reference implementation][ref-impl]\n\n## Usage\n\nThis library comes in multiple variants:\n* `web-streams-polyfill`: a [ponyfill] that provides the stream implementations \n  without replacing any globals, targeting ES2015+ environments.\n  * ✅ Node 6+ through `import` or `require()`\n  * ✅ Modern web browsers through `import`/`export` or `<script type=\"module\">`\n  * ✅ Web apps for modern browsers using a bundler (like webpack or Rollup)\n* `web-streams-polyfill/es5`: a ponyfill targeting ES5+ environments.\n  * ✅ Legacy Node through `require()`\n  * ✅ Legacy web browsers through [AMD][amd]\n  * ✅ Web apps for legacy browsers using a bundler (like webpack or Rollup)\n* `web-streams-polyfill/polyfill`: a polyfill that replaces the native stream implementations,\n  targeting ES2015+ environments.\n  * ✅ Modern web browsers through regular `<script>`\n* `web-streams-polyfill/polyfill/es5`: a polyfill targeting ES5+ environments.\n  * ✅ Legacy web browsers through regular `<script>`\n\nEach variant also includes TypeScript type definitions, compatible with the DOM type definitions for streams included in TypeScript.\n\nIn version 4, the list of variants was reworked to have more modern defaults and to reduce the download size of the package.\nSee the [migration guide][migrating] for more information.\n\nUsage as a polyfill:\n```html\n<!-- option 1: hosted by unpkg CDN -->\n<script src=\"https://unpkg.com/web-streams-polyfill/dist/polyfill.js\"></script>\n<!-- option 2: self hosted -->\n<script src=\"/path/to/web-streams-polyfill/dist/polyfill.js\"></script>\n<script>\nvar readable = new ReadableStream();\n</script>\n```\nUsage as a Node module:\n```js\nvar streams = require(\"web-streams-polyfill\");\nvar readable = new streams.ReadableStream();\n```\nUsage as a ponyfill from within a ES2015 module:\n```js\nimport { ReadableStream } from \"web-streams-polyfill\";\nconst readable = new ReadableStream();\n```\nUsage as a polyfill from within an ES2015 module:\n```js\nimport \"web-streams-polyfill/polyfill\";\nconst readable = new ReadableStream();\n```\n\n## Compatibility\n\nThe default and `polyfill` variants work in any ES2015-compatible environment.\n\nThe `es5` and `polyfill/es5` variants work in any ES5-compatible environment that has a global `Promise`.\nIf you need to support older browsers or Node versions that do not have a native `Promise` implementation\n(check the [support table][promise-support]), you must first include a `Promise` polyfill\n(e.g. [promise-polyfill][promise-polyfill]).\n\n[Async iterable support for `ReadableStream`][rs-asynciterator] is available in all variants, but requires an ES2018-compatible environment or a polyfill for `Symbol.asyncIterator`.\n\n[`WritableStreamDefaultController.signal`][ws-controller-signal] is available in all variants, but requires a global `AbortController` constructor. If necessary, consider using a polyfill such as [abortcontroller-polyfill].\n\n## Compliance\n\nThe polyfill implements [version `e9355ce` (18 Apr 2022)][spec-snapshot] of the streams specification.\n\nThe polyfill is tested against the same [web platform tests][wpt] that are used by browsers to test their native implementations.\nIt aims to pass all tests, although it allows some exceptions for practical reasons:\n* The default (ES2015) variant passes all of the tests, except for:\n  * The [\"bad buffers and views\" tests for readable byte streams][wpt-bad-buffers].\n    These tests require the implementation to synchronously transfer the contents of an `ArrayBuffer`, which is not yet possible from JavaScript (although there is a [proposal][proposal-arraybuffer-transfer] to make it possible).\n    The reference implementation \"cheats\" on these tests [by making a copy instead][ref-impl-transferarraybuffer], but that is unacceptable for the polyfill's performance ([#3][issue-3]).\n  * The [test for the prototype of `ReadableStream`'s async iterator][wpt-async-iterator-prototype].\n    Retrieving the correct `%AsyncIteratorPrototype%` requires using an async generator (`async function* () {}`), which is invalid syntax before ES2018.\n    Instead, the polyfill [creates its own version][stub-async-iterator-prototype] which is functionally equivalent to the real prototype.\n  * The tests [with patched globals][wpt-rs-patched-global] and [with `Object.prototype.then`][wpt-then-interception].\n    These tests are meant for browsers to ensure user-land modifications cannot affect the internal logic of `pipeTo()` and `tee()`. \n    However, it's not reasonable or desirable for a user-land polyfill to try and isolate itself completely from using the global `Object`.\n  * Certain `pipeTo()` tests that require synchronous inspection of the stream's state  ([1][wpt-pipe-sync-state-1], [2][wpt-pipe-sync-state-2]).\n    Because the polyfill uses the public `getReader()` and `getWriter()` API to implement `pipeTo()`, it can only *asynchronously* observe if and when a stream becomes closed or errored.\n    Therefore, when the readable and the writable end become errored *at the exact same time*, it's difficult for the polyfill to observe these state changes in exactly the same order. \n* The ES5 variant passes the same tests as the ES2015 variant, except for various tests about specific characteristics of the constructors, properties and methods.\n  These test failures do not affect the run-time behavior of the polyfill.\n  For example:\n  * The `name` property of down-leveled constructors is incorrect.\n  * The `length` property of down-leveled constructors and methods with optional arguments is incorrect.\n  * Not all properties and methods are correctly marked as non-enumerable.\n  * Down-leveled class methods are not correctly marked as non-constructable.\n\nThe type definitions are compatible with the built-in stream types of TypeScript 3.3 and higher.\n\n## Contributors\n\nThanks to these people for their work on [the original polyfill][creatorrr-polyfill]:\n\n - Diwank Singh Tomer ([creatorrr](https://github.com/creatorrr))\n - Anders Riutta ([ariutta](https://github.com/ariutta))\n\n[spec]: https://streams.spec.whatwg.org\n[ref-impl]: https://github.com/whatwg/streams\n[ponyfill]: https://github.com/sindresorhus/ponyfill\n[amd]: https://requirejs.org/docs/whyamd.html\n[migrating]: https://github.com/MattiasBuelens/web-streams-polyfill/blob/v4.0.0-beta.3/MIGRATING.md\n[promise-support]: https://kangax.github.io/compat-table/es6/#test-Promise\n[promise-polyfill]: https://www.npmjs.com/package/promise-polyfill\n[rs-asynciterator]: https://streams.spec.whatwg.org/#rs-asynciterator\n[ws-controller-signal]: https://streams.spec.whatwg.org/#ws-default-controller-signal\n[abortcontroller-polyfill]: https://www.npmjs.com/package/abortcontroller-polyfill\n[spec-snapshot]: https://streams.spec.whatwg.org/commit-snapshots/e9355ce79925947e8eb496563d599c329769d315/\n[wpt]: https://github.com/web-platform-tests/wpt/tree/6a46d9cb8d20c510a620141c721b81b460a4ee55/streams\n[wpt-bad-buffers]: https://github.com/web-platform-tests/wpt/blob/6a46d9cb8d20c510a620141c721b81b460a4ee55/streams/readable-byte-streams/bad-buffers-and-views.any.js\n[proposal-arraybuffer-transfer]: https://github.com/domenic/proposal-arraybuffer-transfer\n[ref-impl-transferarraybuffer]: https://github.com/whatwg/streams/blob/e9355ce79925947e8eb496563d599c329769d315/reference-implementation/lib/abstract-ops/ecmascript.js#L16\n[issue-3]: https://github.com/MattiasBuelens/web-streams-polyfill/issues/3\n[wpt-async-iterator-prototype]: https://github.com/web-platform-tests/wpt/blob/6a46d9cb8d20c510a620141c721b81b460a4ee55/streams/readable-streams/async-iterator.any.js#L24\n[stub-async-iterator-prototype]: https://github.com/MattiasBuelens/web-streams-polyfill/blob/v4.0.0-beta.3/src/lib/readable-stream/async-iterator.ts#L126-L134\n[wpt-rs-patched-global]: https://github.com/web-platform-tests/wpt/blob/887350c2f46def5b01c4dd1f8d2eee35dfb9c5bb/streams/readable-streams/patched-global.any.js\n[wpt-then-interception]: https://github.com/web-platform-tests/wpt/blob/cf33f00596af295ee0f207c88e23b5f8b0791307/streams/piping/then-interception.any.js\n[wpt-pipe-sync-state-1]: https://github.com/web-platform-tests/wpt/blob/e1e713c842e54ea0a9410ddc988b63d0e1d31973/streams/piping/multiple-propagation.any.js#L30-L53\n[wpt-pipe-sync-state-2]: https://github.com/web-platform-tests/wpt/blob/e1e713c842e54ea0a9410ddc988b63d0e1d31973/streams/piping/multiple-propagation.any.js#L114-L138\n[creatorrr-polyfill]: https://github.com/creatorrr/web-streams-polyfill\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2021 Mattias Buelens\nCopyright (c) 2016 Diwank Singh Tomer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/web-streams-polyfill/-/web-streams-polyfill-4.0.0-beta.3.tgz#2898486b74f5156095e473efe989dcf185047a38",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/web-streams-polyfill/-/web-streams-polyfill-4.0.0-beta.3.tgz",
    "hash": "2898486b74f5156095e473efe989dcf185047a38",
    "integrity": "sha512-QW95TCTaHmsYfHDybGMwO5IJIM93I/6vTRk+daHTWFPhwh+C8Cg7j7XyKrwrj8Ib6vYXe0ocYNrmzY4xAAN6ug==",
    "registry": "npm",
    "packageName": "web-streams-polyfill",
    "cacheIntegrity": "sha512-QW95TCTaHmsYfHDybGMwO5IJIM93I/6vTRk+daHTWFPhwh+C8Cg7j7XyKrwrj8Ib6vYXe0ocYNrmzY4xAAN6ug== sha1-KJhIa3T1FWCV5HPv6Ync8YUEejg="
  },
  "registry": "npm",
  "hash": "2898486b74f5156095e473efe989dcf185047a38"
}